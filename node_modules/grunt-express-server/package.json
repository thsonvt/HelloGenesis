{
  "name": "grunt-express-server",
  "description": "Grunt task for running an Express Server that works great with LiveReload + Watch/Regarde",
  "version": "0.1.0",
  "homepage": "https://github.com/ericclemmons/grunt-express-server",
  "author": {
    "name": "Eric Clemmons",
    "email": "eric@smarterspam.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ericclemmons/grunt-express-server.git"
  },
  "bugs": {
    "url": "https://github.com/ericclemmons/grunt-express-server/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/ericclemmons/grunt-express-server/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "express",
    "server"
  ],
  "readme": "# grunt-express-server\n\n> Grunt task for running an Express Server that works great with LiveReload + Watch/Regarde\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-express-server --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-express-server');\n```\n\n## The \"server\" task\n\n### Setup\n\nIn your project's Gruntfile, simply add a `script` property to your existing `server` object.\n\n```js\ngrunt.initConfig({\n  server: {\n    script: 'path/to/server.js'\n  }\n})\n```\n\n### Usage\n\nAssuming you're using [grunt-contrib-livereload][https://github.com/gruntjs/grunt-contrib-livereload],\nI recommend using the followingin your project's Gruntfile:\n\n```js\ngrunt.initConfig({\n  watch: {\n    server: {\n      files:  '<%= dirs.server + files.all %>',\n      tasks:  [ 'jshint', 'express-server', 'livereload' ]\n    }\n  }\n});\n\ngrunt.registerTask('server', [ 'express-server', 'livereload', 'watch' ])\n```\n\nThis will let you override `grunt server` with a LiveReload-able Express Server.\nFinally, you can make changes to your API and watch the JSON change in your browser!\n\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n### v0.1.0\n\n- Initial import from [Genesis Skeleton](https://github.com/ericclemmons/genesis-skeleton) & release\n",
  "_id": "grunt-express-server@0.1.0",
  "dist": {
    "shasum": "60e17acdfc1b34aa1408989a196ccca7ce00f0df"
  },
  "_from": "grunt-express-server@~0.1.0"
}
